"""all tables create

Revision ID: 2c7d224b8048
Revises: 7ac1ac3e78cd
Create Date: 2025-01-22 23:37:52.792489

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2c7d224b8048'
down_revision: Union[str, None] = '7ac1ac3e78cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.SMALLINT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='public'
    )
    op.create_index('categories_name_id_key', 'categories', ['name'], unique=False, schema='public')
    op.create_table('order_items',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('order_id', sa.BIGINT(), nullable=True),
    sa.Column('product_id', sa.BIGINT(), nullable=True),
    sa.Column('quantity', sa.SMALLINT(), nullable=False),
    sa.Column('price', sa.DOUBLE_PRECISION(), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.SMALLINT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('order_items_order_id_key', 'order_items', ['order_id'], unique=False, schema='public')
    op.create_index('order_items_product_id_key', 'order_items', ['product_id'], unique=False, schema='public')
    op.create_table('orders',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=True),
    sa.Column('total', sa.DOUBLE_PRECISION(), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.SMALLINT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('orders_user_id_key', 'orders', ['user_id'], unique=False, schema='public')
    op.create_table('payments',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('order_id', sa.BIGINT(), nullable=True),
    sa.Column('payment_method', sa.BIGINT(), nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.SMALLINT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('payments_order_id_key', 'payments', ['order_id'], unique=False, schema='public')
    op.create_table('products',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(), nullable=False),
    sa.Column('stock', sa.BIGINT(), nullable=True),
    sa.Column('category_id', sa.BIGINT(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.SMALLINT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('products_category_id_key', 'products', ['category_id'], unique=False, schema='public')
    op.create_index('products_name_key', 'products', ['name'], unique=False, schema='public')
    op.create_table('reviews',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('product_id', sa.BIGINT(), nullable=True),
    sa.Column('user_id', sa.BIGINT(), nullable=True),
    sa.Column('rating', sa.SMALLINT(), nullable=False),
    sa.Column('comment', sa.TEXT(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.SMALLINT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('reviews_product_id_key', 'reviews', ['product_id'], unique=False, schema='public')
    op.create_index('reviews_user_id_key', 'reviews', ['user_id'], unique=False, schema='public')
    op.add_column('user', sa.Column('username', sa.VARCHAR(length=50), nullable=False))
    op.add_column('user', sa.Column('password_hash', sa.VARCHAR(length=255), nullable=False))
    op.add_column('user', sa.Column('full_name', sa.VARCHAR(length=100), nullable=True))
    op.add_column('user', sa.Column('phone_number', sa.VARCHAR(length=20), nullable=True))
    op.add_column('user', sa.Column('address', sa.VARCHAR(length=255), nullable=True))
    op.add_column('user', sa.Column('is_admin', sa.BOOLEAN(), nullable=True))
    op.add_column('user', sa.Column('created_on', sa.TIMESTAMP(), nullable=True))
    op.add_column('user', sa.Column('updated_on', sa.TIMESTAMP(), nullable=True))
    op.create_index('user_email_key', 'user', ['email'], unique=False, schema='public')
    op.create_index('user_is_admin_key', 'user', ['is_admin'], unique=False, schema='public')
    op.create_index('user_username_key', 'user', ['username'], unique=False, schema='public')
    op.create_unique_constraint(None, 'user', ['username'], schema='public')
    op.drop_column('user', 'first_name')
    op.drop_column('user', 'last_name')
    op.drop_column('user', 'mobile_number')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('mobile_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user', schema='public', type_='unique')
    op.drop_index('user_username_key', table_name='user', schema='public')
    op.drop_index('user_is_admin_key', table_name='user', schema='public')
    op.drop_index('user_email_key', table_name='user', schema='public')
    op.drop_column('user', 'updated_on')
    op.drop_column('user', 'created_on')
    op.drop_column('user', 'is_admin')
    op.drop_column('user', 'address')
    op.drop_column('user', 'phone_number')
    op.drop_column('user', 'full_name')
    op.drop_column('user', 'password_hash')
    op.drop_column('user', 'username')
    op.drop_index('reviews_user_id_key', table_name='reviews', schema='public')
    op.drop_index('reviews_product_id_key', table_name='reviews', schema='public')
    op.drop_table('reviews', schema='public')
    op.drop_index('products_name_key', table_name='products', schema='public')
    op.drop_index('products_category_id_key', table_name='products', schema='public')
    op.drop_table('products', schema='public')
    op.drop_index('payments_order_id_key', table_name='payments', schema='public')
    op.drop_table('payments', schema='public')
    op.drop_index('orders_user_id_key', table_name='orders', schema='public')
    op.drop_table('orders', schema='public')
    op.drop_index('order_items_product_id_key', table_name='order_items', schema='public')
    op.drop_index('order_items_order_id_key', table_name='order_items', schema='public')
    op.drop_table('order_items', schema='public')
    op.drop_index('categories_name_id_key', table_name='categories', schema='public')
    op.drop_table('categories', schema='public')
    # ### end Alembic commands ###
